{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport loginStyle from \".\";\nimport config from \"../../../config/config.json\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    display = _useState2[0],\n    setDisplay = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    senha = _useState6[0],\n    setSenha = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    login = _useState8[0],\n    setLogin = _useState8[1];\n  function sendForm() {\n    return _sendForm.apply(this, arguments);\n  }\n  function _sendForm() {\n    _sendForm = _asyncToGenerator(function* () {\n      var response = yield fetch(config.urlRoot + \"/usuario/login\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          senha: senha\n        })\n      });\n      var json = yield response.json();\n      if (json === 'error') {\n        setDisplay('Email ou senha inválidos');\n        setTimeout(function () {\n          setDisplay('');\n        }, 5000);\n        yield AsyncStorage.clear();\n      } else {\n        yield AsyncStorage.setItem('usuarioData', JSON.stringify(json));\n        navigation.navigate('Home');\n      }\n    });\n    return _sendForm.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: loginStyle.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: '#fff',\n      barStyle: \"dark-content\"\n    }), _jsxs(SafeAreaView, {\n      style: loginStyle.upContainer,\n      children: [_jsx(Image, {\n        style: loginStyle.image,\n        source: require(\"../../assets/fundo1.png\")\n      }), _jsx(Text, {\n        style: loginStyle.texto1,\n        children: \"E-PLANNER\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('PrincipalHome');\n        },\n        style: loginStyle.closeBtn,\n        children: _jsx(Text, {\n          style: loginStyle.textCloseBtn,\n          children: \"X\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: loginStyle.smartContainer1,\n      children: [_jsx(Text, {\n        style: loginStyle.register,\n        children: \"Entrar\"\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: loginStyle.loginMsg,\n          children: display\n        })\n      }), _jsxs(View, {\n        style: loginStyle.inputArea1,\n        children: [_jsx(Image, {\n          style: loginStyle.icons,\n          source: require(\"../../assets/iconEmail.png\")\n        }), _jsx(TextInput, {\n          style: loginStyle.inputs,\n          placeholder: \"E-mail\",\n          keyboardType: \"default\",\n          underlineColorAndroid: \"transparent\",\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: loginStyle.inputArea2,\n        children: [_jsx(Image, {\n          style: loginStyle.icons,\n          source: require(\"../../assets/iconLock.png\")\n        }), _jsx(TextInput, {\n          style: loginStyle.inputs,\n          placeholder: \"Senha\",\n          keyboardType: \"default\",\n          underlineColorAndroid: \"transparent\",\n          onChangeText: function onChangeText(text) {\n            return setSenha(text);\n          }\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        children: _jsx(Text, {\n          style: loginStyle.touchText,\n          children: \"Eu n\\xE3o tenho uma conta\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return sendForm();\n        },\n        style: loginStyle.btn,\n        children: _jsx(Text, {\n          style: loginStyle.btnText,\n          children: \"Continuar\"\n        })\n      })]\n    }), _jsx(View, {\n      style: loginStyle.fundo,\n      children: _jsx(Image, {\n        style: loginStyle.fundoImg,\n        source: require(\"../../assets/fundo2.png\")\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","loginStyle","config","View","Text","TouchableOpacity","SafeAreaView","StatusBar","Image","TextInput","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","display","setDisplay","_useState3","_useState4","email","setEmail","_useState5","_useState6","senha","setSenha","_useState7","_useState8","login","setLogin","sendForm","_sendForm","apply","arguments","_asyncToGenerator","response","fetch","urlRoot","method","headers","Accept","body","JSON","stringify","json","setTimeout","clear","setItem","navigate","style","container","children","backgroundColor","barStyle","upContainer","image","source","require","texto1","onPress","closeBtn","textCloseBtn","smartContainer1","register","loginMsg","inputArea1","icons","inputs","placeholder","keyboardType","underlineColorAndroid","onChangeText","text","inputArea2","touchText","btn","btnText","fundo","fundoImg"],"sources":["C:/Users/marcus vinicius/Documents/TCC/E-PLANNER-MAIN-main/E-PLANNER-MAIN-main/src/Screens/Entrar/login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//importando modulo AsyncStorage para salvar dados do login\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport loginStyle from \".\";\n\nimport config from '../../../config/config.json'\n\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    SafeAreaView,\n    StatusBar,\n    Image,\n    TextInput,\n} from \"react-native\";\n\n\n\nexport default function Login({ navigation }) {\n\n    //estados que armazenam os dados do formuário\n    const [display, setDisplay] = useState('')\n    const [email, setEmail] = useState(null)\n    const [senha, setSenha] = useState(null)\n    const [login, setLogin] = useState(null)\n\n    //enviar dados do formulario para a api\n    async function sendForm() {\n        let response = await fetch(`${config.urlRoot}/usuario/login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: email,\n                senha: senha,\n            }),\n        })\n        //recebendo dados que foram verificados na api\n        let json = await response.json()\n\n        //em caso de login incorreto\n        if (json === 'error') {\n            setDisplay('Email ou senha inválidos')\n            setTimeout(() => {\n                setDisplay('')\n            }, 5000)\n            await AsyncStorage.clear()\n        }\n        //login correto \n        else {\n            //armazenando dados do usuario em cache e o redirecionando para home\n            await AsyncStorage.setItem('usuarioData', JSON.stringify(json))\n            navigation.navigate('Home')\n        }\n\n    }\n\n    return (\n\n        <View style={loginStyle.container}>\n            <StatusBar backgroundColor={'#fff'} barStyle=\"dark-content\" />\n\n            <SafeAreaView\n                style={loginStyle.upContainer}\n            >\n\n                <Image\n                    style={loginStyle.image}\n                    source={require('../../assets/fundo1.png')}\n                />\n\n                <Text style={loginStyle.texto1}>E-PLANNER</Text>\n\n                <TouchableOpacity\n                    onPress={() => navigation.navigate('PrincipalHome')}\n                    style={loginStyle.closeBtn}\n                >\n                    <Text style={loginStyle.textCloseBtn}>X</Text>\n                </TouchableOpacity>\n\n            </SafeAreaView>\n\n            <View style={loginStyle.smartContainer1}>\n\n                <Text style={loginStyle.register}>Entrar</Text>\n                {/* <Text>{email} - {senha}</Text> */}\n\n                <View>\n                    <Text style={loginStyle.loginMsg}>\n                        {display}\n                    </Text>\n                </View>\n\n                <View style={loginStyle.inputArea1}>\n                    <Image\n                        style={loginStyle.icons}\n                        source={require('../../assets/iconEmail.png')} />\n\n                    <TextInput\n                        style={loginStyle.inputs}\n                        placeholder=\"E-mail\"\n                        keyboardType=\"default\"\n                        underlineColorAndroid=\"transparent\"\n                        onChangeText={text => setEmail(text)}\n                    />\n                </View>\n\n                <View style={loginStyle.inputArea2}>\n                    <Image\n                        style={loginStyle.icons}\n                        source={require('../../assets/iconLock.png')} />\n\n                    <TextInput\n                        style={loginStyle.inputs}\n                        placeholder=\"Senha\"\n                        keyboardType=\"default\"\n                        underlineColorAndroid=\"transparent\"\n                        onChangeText={text => setSenha(text)}\n                    />\n                </View>\n\n                <TouchableOpacity\n                    onPress={() => navigation.navigate('Register')}\n                >\n                    <Text style={loginStyle.touchText}>Eu não tenho uma conta</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    onPress={() => sendForm()}\n                    style={loginStyle.btn}>\n                    <Text style={loginStyle.btnText}>Continuar</Text>\n                </TouchableOpacity>\n\n            </View>\n\n            <View style={loginStyle.fundo}>\n                <Image\n                    style={loginStyle.fundoImg}\n                    source={require('../../assets/fundo2.png')}\n                />\n            </View>\n        </View>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAGlD,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,OAAOC,UAAU,MAAM,GAAG;AAE1B,OAAOC,MAAM;AAAmC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAchD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAGtC,IAAAC,SAAA,GAA8BnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA0BxB,QAAQ,CAAC,IAAI,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA0B5B,QAAQ,CAAC,IAAI,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA0BhC,QAAQ,CAAC,IAAI,CAAC;IAAAiC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAAkB,SAGzBG,QAAQA,CAAA;IAAA,OAAAC,SAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,UAAA;IAAAA,SAAA,GAAAG,iBAAA,CAAvB,aAA0B;MACtB,IAAIC,QAAQ,SAASC,KAAK,CAAItC,MAAM,CAACuC,OAAO,qBAAkB;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBvB,KAAK,EAAEA,KAAK;UACZI,KAAK,EAAEA;QACX,CAAC;MACL,CAAC,CAAC;MAEF,IAAIoB,IAAI,SAAST,QAAQ,CAACS,IAAI,EAAE;MAGhC,IAAIA,IAAI,KAAK,OAAO,EAAE;QAClB3B,UAAU,CAAC,0BAA0B,CAAC;QACtC4B,UAAU,CAAC,YAAM;UACb5B,UAAU,CAAC,EAAE,CAAC;QAClB,CAAC,EAAE,IAAI,CAAC;QACR,MAAMrB,YAAY,CAACkD,KAAK,EAAE;MAC9B,CAAC,MAEI;QAED,MAAMlD,YAAY,CAACmD,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;QAC/DhC,UAAU,CAACoC,QAAQ,CAAC,MAAM,CAAC;MAC/B;IAEJ,CAAC;IAAA,OAAAjB,SAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAEIxB,KAAA,CAACV,IAAI;IAACkD,KAAK,EAAEpD,UAAU,CAACqD,SAAU;IAAAC,QAAA,GAC9B5C,IAAA,CAACJ,SAAS;MAACiD,eAAe,EAAE,MAAO;MAACC,QAAQ,EAAC;IAAc,EAAG,EAE9D5C,KAAA,CAACP,YAAY;MACT+C,KAAK,EAAEpD,UAAU,CAACyD,WAAY;MAAAH,QAAA,GAG9B5C,IAAA,CAACH,KAAK;QACF6C,KAAK,EAAEpD,UAAU,CAAC0D,KAAM;QACxBC,MAAM,EAAEC,OAAO;MAA4B,EAC7C,EAEFlD,IAAA,CAACP,IAAI;QAACiD,KAAK,EAAEpD,UAAU,CAAC6D,MAAO;QAAAP,QAAA,EAAC;MAAS,EAAO,EAEhD5C,IAAA,CAACN,gBAAgB;QACb0D,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM/C,UAAU,CAACoC,QAAQ,CAAC,eAAe,CAAC;QAAA,CAAC;QACpDC,KAAK,EAAEpD,UAAU,CAAC+D,QAAS;QAAAT,QAAA,EAE3B5C,IAAA,CAACP,IAAI;UAACiD,KAAK,EAAEpD,UAAU,CAACgE,YAAa;UAAAV,QAAA,EAAC;QAAC;MAAO,EAC/B;IAAA,EAER,EAEf1C,KAAA,CAACV,IAAI;MAACkD,KAAK,EAAEpD,UAAU,CAACiE,eAAgB;MAAAX,QAAA,GAEpC5C,IAAA,CAACP,IAAI;QAACiD,KAAK,EAAEpD,UAAU,CAACkE,QAAS;QAAAZ,QAAA,EAAC;MAAM,EAAO,EAG/C5C,IAAA,CAACR,IAAI;QAAAoD,QAAA,EACD5C,IAAA,CAACP,IAAI;UAACiD,KAAK,EAAEpD,UAAU,CAACmE,QAAS;UAAAb,QAAA,EAC5BnC;QAAO;MACL,EACJ,EAEPP,KAAA,CAACV,IAAI;QAACkD,KAAK,EAAEpD,UAAU,CAACoE,UAAW;QAAAd,QAAA,GAC/B5C,IAAA,CAACH,KAAK;UACF6C,KAAK,EAAEpD,UAAU,CAACqE,KAAM;UACxBV,MAAM,EAAEC,OAAO;QAA+B,EAAG,EAErDlD,IAAA,CAACF,SAAS;UACN4C,KAAK,EAAEpD,UAAU,CAACsE,MAAO;UACzBC,WAAW,EAAC,QAAQ;UACpBC,YAAY,EAAC,SAAS;UACtBC,qBAAqB,EAAC,aAAa;UACnCC,YAAY,EAAE,SAAAA,aAAAC,IAAI;YAAA,OAAInD,QAAQ,CAACmD,IAAI,CAAC;UAAA;QAAC,EACvC;MAAA,EACC,EAEP/D,KAAA,CAACV,IAAI;QAACkD,KAAK,EAAEpD,UAAU,CAAC4E,UAAW;QAAAtB,QAAA,GAC/B5C,IAAA,CAACH,KAAK;UACF6C,KAAK,EAAEpD,UAAU,CAACqE,KAAM;UACxBV,MAAM,EAAEC,OAAO;QAA8B,EAAG,EAEpDlD,IAAA,CAACF,SAAS;UACN4C,KAAK,EAAEpD,UAAU,CAACsE,MAAO;UACzBC,WAAW,EAAC,OAAO;UACnBC,YAAY,EAAC,SAAS;UACtBC,qBAAqB,EAAC,aAAa;UACnCC,YAAY,EAAE,SAAAA,aAAAC,IAAI;YAAA,OAAI/C,QAAQ,CAAC+C,IAAI,CAAC;UAAA;QAAC,EACvC;MAAA,EACC,EAEPjE,IAAA,CAACN,gBAAgB;QACb0D,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM/C,UAAU,CAACoC,QAAQ,CAAC,UAAU,CAAC;QAAA,CAAC;QAAAG,QAAA,EAE/C5C,IAAA,CAACP,IAAI;UAACiD,KAAK,EAAEpD,UAAU,CAAC6E,SAAU;UAAAvB,QAAA,EAAC;QAAsB;MAAO,EACjD,EAEnB5C,IAAA,CAACN,gBAAgB;QACb0D,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM7B,QAAQ,EAAE;QAAA,CAAC;QAC1BmB,KAAK,EAAEpD,UAAU,CAAC8E,GAAI;QAAAxB,QAAA,EACtB5C,IAAA,CAACP,IAAI;UAACiD,KAAK,EAAEpD,UAAU,CAAC+E,OAAQ;UAAAzB,QAAA,EAAC;QAAS;MAAO,EAClC;IAAA,EAEhB,EAEP5C,IAAA,CAACR,IAAI;MAACkD,KAAK,EAAEpD,UAAU,CAACgF,KAAM;MAAA1B,QAAA,EAC1B5C,IAAA,CAACH,KAAK;QACF6C,KAAK,EAAEpD,UAAU,CAACiF,QAAS;QAC3BtB,MAAM,EAAEC,OAAO;MAA4B;IAC7C,EACC;EAAA,EACJ;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}