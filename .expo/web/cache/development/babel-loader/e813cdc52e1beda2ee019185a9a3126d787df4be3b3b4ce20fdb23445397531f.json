{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport config from \"../../../config/config.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Card(_ref) {\n  var usuario = _ref.usuario;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isActive = _useState2[0],\n    setIsActive = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var usuarioId = usuario || '';\n  useEffect(function () {\n    fetchData();\n  }, [usuarioId]);\n  var fetchData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield fetch(config.urlRoot + \"/categoria/listar\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuarioId: usuarioId\n        })\n      });\n      var json = yield response.json();\n      setData(json);\n    });\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleCard = function toggleCard() {\n    setIsActive(!isActive);\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.card,\n    onPress: toggleCard,\n    children: [_jsxs(View, {\n      style: styles.upContainer,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: Título\n      }), _jsx(Text, {\n        style: styles.value,\n        children: \"R$ 0,00\"\n      })]\n    }), isActive && _jsx(View, {\n      style: styles.cardContent,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Texto do card que ser\\xE1 exibido ap\\xF3s o clique.\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#d9d9d9',\n    borderRadius: 25,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 5,\n    padding: 14,\n    textAlign: 'center',\n    width: 320,\n    marginTop: 10\n  },\n  upContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  value: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 10\n  },\n  cardContent: {\n    padding: 14,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 16,\n    textAlign: 'justify'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","TouchableOpacity","AsyncStorage","config","jsx","_jsx","jsxs","_jsxs","Card","_ref","usuario","_useState","_useState2","_slicedToArray","isActive","setIsActive","_useState3","_useState4","data","setData","usuarioId","fetchData","_ref2","_asyncToGenerator","response","fetch","urlRoot","method","headers","Accept","body","JSON","stringify","json","apply","arguments","toggleCard","style","styles","card","onPress","children","upContainer","title","Título","value","cardContent","text","create","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","padding","textAlign","marginTop","flexDirection","justifyContent","fontSize","fontWeight","marginBottom","marginLeft","alignItems"],"sources":["C:/Users/marcus vinicius/Documents/TCC/E-PLANNER-MAIN-main/E-PLANNER-MAIN-main/src/components/card/card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport config from '../../../config/config.json'\n\nexport default function Card({usuario}) {\n    const [isActive, setIsActive] = useState(false);\n    const [data, setData] = useState([]);\n\n   \n\n    const usuarioId = usuario || ''\n\n    useEffect(() => {\n        fetchData();\n    }, [usuarioId]);\n\n\n    const fetchData = async () => {\n        let response = await fetch(`${config.urlRoot}/categoria/listar`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                usuarioId: usuarioId\n            }),\n        })\n        let json = await response.json()\n        setData(json)\n\n    }\n\n\n    const toggleCard = () => {\n        setIsActive(!isActive);\n    };\n\n    return (\n\n        <TouchableOpacity style={styles.card} onPress={toggleCard}>\n            <View style={styles.upContainer}>\n                <Text style={styles.title}>{Título}</Text>\n                <Text style={styles.value}>R$ 0,00</Text>\n            </View>\n            {isActive && (\n                <View style={styles.cardContent}>\n                    <Text style={styles.text}>\n                        Texto do card que será exibido após o clique.\n                    </Text>\n                </View>\n            )}\n        </TouchableOpacity>\n    );\n}\n\nconst styles = StyleSheet.create({\n    card: {\n        backgroundColor: '#d9d9d9',\n        borderRadius: 25,\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n        elevation: 5,\n        padding: 14,\n        textAlign: 'center',\n        width: 320,\n        marginTop: 10,\n\n    },\n    upContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    value: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginLeft: 10\n    },\n    cardContent: {\n        padding: 14,\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    text: {\n        fontSize: 16,\n        textAlign: 'justify',\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}