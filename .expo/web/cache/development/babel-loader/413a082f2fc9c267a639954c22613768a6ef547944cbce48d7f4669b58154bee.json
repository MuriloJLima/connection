{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Slider from '@react-native-community/slider';\nimport definifirRendaStyle from \"../../styles/HomeStyle/definirRendaStyle\";\nimport config from \"../../../config/config.json\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nvar WIDTH = Dimensions.get('window').width - 125;\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DefinirRenda(_ref) {\n  var navigation = _ref.navigation,\n    min = _ref.min,\n    max = _ref.max,\n    steps = _ref.steps;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    usuarioId = _useState2[0],\n    setUsuario = _useState2[1];\n  var _useState3 = useState(500),\n    _useState4 = _slicedToArray(_useState3, 2),\n    sliderValue = _useState4[0],\n    setSliderValue = _useState4[1];\n  useEffect(function () {\n    function getUsuario() {\n      return _getUsuario.apply(this, arguments);\n    }\n    function _getUsuario() {\n      _getUsuario = _asyncToGenerator(function* () {\n        var response = yield AsyncStorage.getItem('usuarioData');\n        var json = JSON.parse(response);\n        setUsuario(json.id);\n      });\n      return _getUsuario.apply(this, arguments);\n    }\n    getUsuario();\n  }, []);\n  function sendForm() {\n    return _sendForm.apply(this, arguments);\n  }\n  function _sendForm() {\n    _sendForm = _asyncToGenerator(function* () {\n      var response = yield fetch(config.urlRoot + \"/orcamento/adicionar\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          valor: sliderValue,\n          usuarioId: usuarioId\n        })\n      });\n      var json = yield response.json();\n      if (json === 'success') {\n        navigation.navigate('Home');\n      }\n    });\n    return _sendForm.apply(this, arguments);\n  }\n  return _jsxs(SafeAreaView, {\n    style: definifirRendaStyle.fundo,\n    children: [_jsx(Image, {\n      style: definifirRendaStyle.fundoImg,\n      source: require(\"../../assets/fundo.png\")\n    }), _jsxs(View, {\n      style: definifirRendaStyle.container,\n      children: [_jsx(Text, {\n        style: definifirRendaStyle.texto1,\n        children: \"E-PLANNER\"\n      }), _jsx(Text, {\n        style: definifirRendaStyle.texto2,\n        children: \"Defina sua renda\"\n      })]\n    }), _jsxs(View, {\n      style: definifirRendaStyle.areaRenda,\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(Text, {\n          style: styles.texto,\n          children: [\"R$ \", sliderValue]\n        }), _jsxs(View, {\n          style: styles.labelsContainer,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: min\n          }), _jsx(Text, {\n            style: styles.label,\n            children: max\n          })]\n        }), _jsx(Slider, {\n          style: {\n            width: 300,\n            height: 60\n          },\n          minimumValue: 500,\n          maximumValue: 12500,\n          onValueChange: function onValueChange(value) {\n            return setSliderValue(value);\n          },\n          value: sliderValue,\n          step: 100,\n          thumbTintColor: \"#02CB7F\",\n          minimumTrackTintColor: \"#02CB7F\",\n          maximumTrackTintColor: \"#000\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: definifirRendaStyle.btn,\n        onPress: function onPress() {\n          return sendForm();\n        },\n        children: _jsx(Text, {\n          style: definifirRendaStyle.btnText,\n          children: \"Continuar\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  texto: {\n    fontSize: 26\n  },\n  labelsContainer: {\n    width: WIDTH,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  label: {\n    color: '#777'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Slider","definifirRendaStyle","config","View","Text","TouchableOpacity","StyleSheet","Dimensions","Image","SafeAreaView","WIDTH","get","width","AsyncStorage","jsx","_jsx","jsxs","_jsxs","DefinirRenda","_ref","navigation","min","max","steps","_useState","_useState2","_slicedToArray","usuarioId","setUsuario","_useState3","_useState4","sliderValue","setSliderValue","getUsuario","_getUsuario","apply","arguments","_asyncToGenerator","response","getItem","json","JSON","parse","id","sendForm","_sendForm","fetch","urlRoot","method","headers","Accept","body","stringify","valor","navigate","style","fundo","children","fundoImg","source","require","container","texto1","texto2","areaRenda","styles","texto","labelsContainer","label","height","minimumValue","maximumValue","onValueChange","value","step","thumbTintColor","minimumTrackTintColor","maximumTrackTintColor","btn","onPress","btnText","create","justifyContent","alignItems","fontSize","flexDirection","color"],"sources":["C:/Users/marcus vinicius/Documents/TCC/E-PLANNER-MAIN-main/E-PLANNER-MAIN-main/src/Screens/DefinirRenda/definirRenda.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Slider from '@react-native-community/slider';\n\nimport definifirRendaStyle from \"../../styles/HomeStyle/definirRendaStyle\";\n\nimport config from '../../../config/config.json'\n\n\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    StyleSheet,\n    Dimensions,\n    Image,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\nconst WIDTH = Dimensions.get('window').width - 125;\n\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function DefinirRenda({ navigation, min, max, steps }) {\n\n    //estados que armazenam os dados\n    const [usuarioId, setUsuario] = useState(null)\n    const [sliderValue, setSliderValue] = useState(500);\n\n    //função que requisita id do usuário\n    useEffect(() => {\n        async function getUsuario() {\n            let response = await AsyncStorage.getItem('usuarioData')\n            let json = JSON.parse(response)\n            setUsuario(json.id)\n        }\n        getUsuario()\n    }, [])\n\n    //função que encaminha os dados para a api\n    async function sendForm() {\n        let response = await fetch(`${config.urlRoot}/orcamento/adicionar`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                valor: sliderValue,\n                usuarioId: usuarioId\n            }),\n        })\n        let json = await response.json()\n\n        if (json === 'success'){\n            navigation.navigate('Home')\n        }\n    }\n    return (\n\n        <SafeAreaView style={definifirRendaStyle.fundo}>\n\n            <Image\n                style={definifirRendaStyle.fundoImg}\n                source={require('../../assets/fundo.png')}\n            />\n\n            <View style={definifirRendaStyle.container}>\n                <Text\n                    style={definifirRendaStyle.texto1}\n                >E-PLANNER</Text>\n\n                <Text\n                    style={definifirRendaStyle.texto2}\n                >Defina sua renda</Text>\n\n            </View>\n\n\n            <View\n                style={definifirRendaStyle.areaRenda}\n            >\n                \n                <View style={styles.container}>\n                    <Text\n                        style={styles.texto}\n                    >R$ {sliderValue}</Text>\n                    <View style={styles.labelsContainer}>\n                        <Text style={styles.label}>{min}</Text>\n                        <Text style={styles.label}>{max}</Text>\n                    </View>\n                    <Slider\n                        style={{ width: 300, height: 60 }}\n                        minimumValue={500}\n                        maximumValue={12500}\n                        onValueChange={(value) => setSliderValue(value)}\n                        value={sliderValue}\n                        step={100}\n                        thumbTintColor=\"#02CB7F\"\n                        minimumTrackTintColor=\"#02CB7F\"\n                        maximumTrackTintColor=\"#000\" />\n                </View>\n                \n\n                <TouchableOpacity\n                    style={definifirRendaStyle.btn}\n                    onPress={() => sendForm()}\n                >\n                    <Text style={definifirRendaStyle.btnText}>Continuar</Text>\n                </TouchableOpacity>\n\n            </View>\n\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    texto: {\n        fontSize: 26,\n    },\n    labelsContainer: {\n        width: WIDTH,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    label: {\n        color: '#777',\n    },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}