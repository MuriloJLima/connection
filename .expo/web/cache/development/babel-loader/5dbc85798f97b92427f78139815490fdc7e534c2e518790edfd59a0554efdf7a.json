{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedYear = _useState2[0],\n    setSelectedYear = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMonth = _useState4[0],\n    setSelectedMonth = _useState4[1];\n  var currentYear = new Date().getFullYear();\n  var yearItems = [];\n  for (var year = currentYear - 5; year <= currentYear; year++) {\n    var yearString = year.toString();\n    yearItems.push(_jsx(Picker.Item, {\n      label: yearString,\n      value: yearString\n    }, yearString));\n  }\n  var monthItems = [];\n  for (var month = 1; month <= 12; month++) {\n    var monthString = (\"0\" + month).slice(-2);\n    var label = new Date(currentYear, month - 1).toLocaleString('default', {\n      month: 'long'\n    });\n    monthItems.push(_jsx(Picker.Item, {\n      label: label,\n      value: monthString\n    }, monthString));\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"Selecione a data:\"\n    }), _jsxs(View, {\n      style: styles.pickerContainer,\n      children: [_jsx(Picker, {\n        style: styles.picker,\n        selectedValue: selectedYear,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedYear(itemValue);\n        },\n        children: yearItems\n      }), _jsx(Picker, {\n        style: styles.picker,\n        selectedValue: selectedMonth,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedMonth(itemValue);\n        },\n        children: monthItems\n      })]\n    }), _jsxs(Text, {\n      style: styles.result,\n      children: [\"Data selecionada: \", selectedMonth, \"/\", selectedYear]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  pickerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  picker: {\n    width: 150,\n    height: 50,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  result: {\n    marginTop: 20,\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Picker","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","selectedYear","setSelectedYear","_useState3","_useState4","selectedMonth","setSelectedMonth","currentYear","Date","getFullYear","yearItems","year","yearString","toString","push","Item","label","value","monthItems","month","monthString","slice","toLocaleString","style","styles","container","children","pickerContainer","picker","selectedValue","onValueChange","itemValue","result","create","flex","alignItems","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","flexDirection","width","height","marginLeft","marginRight","marginTop"],"sources":["C:/Users/marcus vinicius/Documents/TCC/E-PLANNER-MAIN-main/E-PLANNER-MAIN-main/src/Screens/AdicionarCategorias/adcCat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Picker } from 'react-native';\n\nexport default function App() {\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n\n  // obtém o ano atual\n  const currentYear = new Date().getFullYear();\n\n  // cria as opções da lista suspensa\n  const yearItems = [];\n  for (let year = currentYear - 5; year <= currentYear; year++) {\n    const yearString = year.toString();\n    yearItems.push(<Picker.Item key={yearString} label={yearString} value={yearString} />);\n  }\n\n  const monthItems = [];\n  for (let month = 1; month <= 12; month++) {\n    const monthString = (\"0\" + month).slice(-2); // formata o número do mês com dois dígitos\n    const label = new Date(currentYear, month - 1).toLocaleString('default', { month: 'long' });\n    monthItems.push(<Picker.Item key={monthString} label={label} value={monthString} />);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>Selecione a data:</Text>\n      <View style={styles.pickerContainer}>\n        <Picker\n          style={styles.picker}\n          selectedValue={selectedYear}\n          onValueChange={(itemValue) => setSelectedYear(itemValue)}\n        >\n          {yearItems}\n        </Picker>\n        <Picker\n          style={styles.picker}\n          selectedValue={selectedMonth}\n          onValueChange={(itemValue) => setSelectedMonth(itemValue)}\n        >\n          {monthItems}\n        </Picker>\n      </View>\n      <Text style={styles.result}>Data selecionada: {selectedMonth}/{selectedYear}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  pickerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  picker: {\n    width: 150,\n    height: 50,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  result: {\n    marginTop: 20,\n    fontSize: 16,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}