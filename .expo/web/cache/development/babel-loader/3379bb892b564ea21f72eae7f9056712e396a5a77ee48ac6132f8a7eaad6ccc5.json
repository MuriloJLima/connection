{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport config from \"../../../config/config.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Card() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isActive = _useState2[0],\n    setIsActive = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    usuario = _useState4[0],\n    setUsuarioId = _useState4[1];\n  useEffect(function () {\n    getUsuarioId();\n  }, []);\n  function getUsuarioId() {\n    return _getUsuarioId.apply(this, arguments);\n  }\n  function _getUsuarioId() {\n    _getUsuarioId = _asyncToGenerator(function* () {\n      var response = yield AsyncStorage.getItem('usuarioData');\n      var json = JSON.parse(response);\n      setUsuarioId(json.id);\n    });\n    return _getUsuarioId.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchData();\n  }, [usuarioId]);\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch(config.urlRoot + \"/categoria/listar\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuarioId: usuario\n        })\n      });\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var toggleCard = function toggleCard() {\n    setIsActive(!isActive);\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.card,\n    onPress: toggleCard,\n    children: [_jsxs(View, {\n      style: styles.upContainer,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"T\\xEDtulo do Card\"\n      }), _jsx(Text, {\n        style: styles.value,\n        children: \"R$ 0,00\"\n      })]\n    }), isActive && _jsx(View, {\n      style: styles.cardContent,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Texto do card que ser\\xE1 exibido ap\\xF3s o clique.\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#d9d9d9',\n    borderRadius: 25,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 5,\n    padding: 14,\n    textAlign: 'center',\n    width: 320,\n    marginTop: 10\n  },\n  upContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  value: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 10\n  },\n  cardContent: {\n    padding: 14,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 16,\n    textAlign: 'justify'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","TouchableOpacity","AsyncStorage","config","jsx","_jsx","jsxs","_jsxs","Card","_useState","_useState2","_slicedToArray","isActive","setIsActive","_useState3","_useState4","usuario","setUsuarioId","getUsuarioId","_getUsuarioId","apply","arguments","_asyncToGenerator","response","getItem","json","JSON","parse","id","fetchData","usuarioId","_ref","fetch","urlRoot","method","headers","Accept","body","stringify","toggleCard","style","styles","card","onPress","children","upContainer","title","value","cardContent","text","create","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","padding","textAlign","marginTop","flexDirection","justifyContent","fontSize","fontWeight","marginBottom","marginLeft","alignItems"],"sources":["C:/Users/marcus vinicius/Documents/TCC/E-PLANNER-MAIN-main/E-PLANNER-MAIN-main/src/components/card/card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport config from '../../../config/config.json'\n\nexport default function Card() {\n    const [isActive, setIsActive] = useState(false);\n    const [usuario, setUsuarioId] = useState('');\n\n    useEffect(() => {\n        getUsuarioId();\n    }, []);\n\n    async function getUsuarioId() {\n        let response = await AsyncStorage.getItem('usuarioData')\n        let json = JSON.parse(response)\n        setUsuarioId(json.id)\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [usuarioId]);\n    const fetchData = async () => {\n        let response = await fetch(`${config.urlRoot}/categoria/listar`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                usuarioId: usuario\n            }),\n        })\n        // let json = await response.json()\n        // setData(json)\n\n    }\n\n\n    const toggleCard = () => {\n        setIsActive(!isActive);\n    };\n\n    return (\n\n        <TouchableOpacity style={styles.card} onPress={toggleCard}>\n            <View style={styles.upContainer}>\n                <Text style={styles.title}>Título do Card</Text>\n                <Text style={styles.value}>R$ 0,00</Text>\n            </View>\n            {isActive && (\n                <View style={styles.cardContent}>\n                    <Text style={styles.text}>\n                        Texto do card que será exibido após o clique.\n                    </Text>\n                </View>\n            )}\n        </TouchableOpacity>\n    );\n}\n\nconst styles = StyleSheet.create({\n    card: {\n        backgroundColor: '#d9d9d9',\n        borderRadius: 25,\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.3,\n        shadowRadius: 5,\n        elevation: 5,\n        padding: 14,\n        textAlign: 'center',\n        width: 320,\n        marginTop: 10,\n\n    },\n    upContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    value: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginLeft: 10\n    },\n    cardContent: {\n        padding: 14,\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    text: {\n        fontSize: 16,\n        textAlign: 'justify',\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}